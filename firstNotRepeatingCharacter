Given a string s consisting of small English letters, find and return the first instance of a non-repeating character in it. If there is no such character, return '_'.

Example

For s = "abacabad", the output should be
firstNotRepeatingCharacter(s) = 'c'.

There are 2 non-repeating characters in the string: 'c' and 'd'. Return c since it appears in the string first.

For s = "abacabaabacaba", the output should be
firstNotRepeatingCharacter(s) = '_'.

There are no characters in this string that do not repeat.

https://app.codesignal.com/interview-practice/task/uX5iLwhc6L5ckSyNC/description


################################################################## SOLUTIONS #############################################################
//////////////////////  ### PYTHON ### /////////////////////////////////
def firstNotRepeatingCharacter(s):
    charList = {}
    for i in s:
        if i in charList:
            charList[i] = charList[i] + 1
        else:
            charList[i] = 1
    for key in charList:
        if charList.get(key) == 1:
            return key
    return '_'

//////////////////////  ### JAVA ### ///////////////////////////////////
char firstNotRepeatingCharacter(String s) {
    char[] letter = s.toCharArray();
    for (int i = 0; i < s.length(); i++){
        if (s.indexOf(letter[i]) == s.lastIndexOf(letter[i])){
            return letter[i];
        }
    }
    return '_';
}
